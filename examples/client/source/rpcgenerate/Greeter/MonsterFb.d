module rpcgenerate.Greeter.MonsterFb;
// automatically generated by the FlatBuffers compiler, do not modifymodule rpcgenerate.Greeter.MonsterFb;

import std.typecons;
import flatbuffers;

import rpcgenerate.Greeter.PosFb;
import rpcgenerate.Greeter.WeaponFb;
struct MonsterFb {
	mixin Table!MonsterFb;

  static MonsterFb getRootAsMonsterFb(ByteBuffer _bb) {  return MonsterFb.init_(_bb.get!int(_bb.position()) + _bb.position(), _bb); }
	@property ulong id() { uint o = __offset(4); return o != 0 ? _buffer.get!ulong(o + _pos) : 1; }
	@property Nullable!PosFb pos() { uint o = __offset(6); return o != 0 ? Nullable!PosFb(PosFb.init_(__indirect(o + _pos), _buffer)) : Nullable!PosFb.init; }
	auto weapons() { return Iterator!(MonsterFb, WeaponFb, "weapons")(this); }
	Nullable!WeaponFb weapons(uint j) { uint o = __offset(8); return o != 0 ? Nullable!WeaponFb(WeaponFb.init_(__indirect(__dvector(o) + j * 4), _buffer)) : Nullable!WeaponFb.init; }
	@property uint weaponsLength() { uint o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

	static uint createMonsterFb(FlatBufferBuilder builder,ulong id,uint pos,uint weapons) {
		builder.startObject(3);
		MonsterFb.addId(builder, id);
		MonsterFb.addWeapons(builder, weapons);
		MonsterFb.addPos(builder, pos);
		return MonsterFb.endMonsterFb(builder);
	}

	static void startMonsterFb(FlatBufferBuilder builder) { builder.startObject(3); }
	static void addId(FlatBufferBuilder builder, ulong id) { builder.add!ulong(0, id, 1); }
	static void addPos(FlatBufferBuilder builder, uint posOffset) { builder.addOffset(1, posOffset, 0); }
	static void addWeapons(FlatBufferBuilder builder, uint weaponsOffset) { builder.addOffset(2, weaponsOffset, 0); }
	static uint createWeaponsVector(FlatBufferBuilder builder, uint[] data) { builder.startVector(4, cast(uint)data.length, 4); for (size_t i = data.length; i > 0; i--) builder.addOffset(data[i - 1]); return builder.endVector(); }
	static void startWeaponsVector(FlatBufferBuilder builder, uint numElems) { builder.startVector(4, numElems, 4); }
	static uint endMonsterFb(FlatBufferBuilder builder) {
		uint o = builder.endObject();
		return o;
	}
	static void finishMonsterFbBuffer(FlatBufferBuilder builder, uint offset) { builder.finish(offset);	}
}

